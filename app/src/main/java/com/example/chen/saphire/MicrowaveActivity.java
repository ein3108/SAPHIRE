package com.example.chen.saphire;

import com.example.chen.saphire.R;
import com.google.android.glass.media.Sounds;
import com.google.android.glass.view.WindowUtils;
import com.google.android.glass.widget.CardBuilder;
import com.google.android.glass.widget.CardScrollAdapter;
import com.google.android.glass.widget.CardScrollView;

import com.example.chen.saphire.SaphireClient;
/* To catch MalformedURLException instances */
import java.net.MalformedURLException;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.media.AudioManager;
import android.os.AsyncTask;
import android.os.Bundle;
import android.speech.RecognizerIntent;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;

import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;

import java.util.ArrayList;
import java.util.List;

/**
 * An {@link Activity} showing a tuggable "Hello World!" card.
 * <p/>
 * The main content view is composed of a one-card {@link CardScrollView} that provides tugging
 * feedback to the user when swipe gestures are detected.
 * If your Glassware intends to intercept swipe gestures, you should set the content view directly
 * and use a {@link com.google.android.glass.touchpad.GestureDetector}.
 *
 * @see <a href="https://developers.google.com/glass/develop/gdk/touch">GDK Developer Guide</a>
 */
public class MicrowaveActivity extends Activity {

    private ArrayList<String> foods = new ArrayList<String>();
    public boolean doneFlag = false;
    /**
     * {@link CardScrollView} to use as the main content view.
     */
    private CardScrollView mCardScroller;

    /**
     * "Hello World!" {@link View} generated by {@link #buildView()}.
     */
    private View mView;

    @Override
    protected void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        getWindow().requestFeature(WindowUtils.FEATURE_VOICE_COMMANDS);

        mView = buildView();

        mCardScroller = new CardScrollView(this);
        mCardScroller.setAdapter(new CardScrollAdapter() {
            @Override
            public int getCount() {
                return 1;
            }

            @Override
            public Object getItem(int position) {
                return mView;
            }

            @Override
            public View getView(int position, View convertView, ViewGroup parent) {
                return mView;
            }

            @Override
            public int getPosition(Object item) {
                if (mView.equals(item)) {
                    return 0;
                }
                return AdapterView.INVALID_POSITION;
            }
        });
        // Handle the TAP event.
        mCardScroller.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                // Plays disallowed sound to indicate that TAP actions are not supported.
                AudioManager am = (AudioManager) getSystemService(Context.AUDIO_SERVICE);
                am.playSoundEffect(Sounds.DISALLOWED);
            }
        });
        setContentView(mCardScroller);
    }

    @Override
    protected void onResume() {
        super.onResume();
        mCardScroller.activate();
    }

    @Override
    protected void onPause() {
        mCardScroller.deactivate();
        super.onPause();
    }

    /**
     * Builds a Glass styled "Hello World!" view using the {@link CardBuilder} class.
     */
    private View buildView() {
        CardBuilder card = new CardBuilder(this, CardBuilder.Layout.TEXT);

        if (foods.isEmpty()) {
            card.setText(R.string.microwave);
        } else if (doneFlag) {
            //Log.d("Hello", "doneFlag");
            card.setText("Done");
        } else {
            card.setText(foods.get(0));
        }
        return card.getView();
    }

    @Override
    public boolean onCreatePanelMenu(int featureId, Menu menu) {
        if (featureId == WindowUtils.FEATURE_VOICE_COMMANDS) {
            getMenuInflater().inflate(R.menu.activity_menu, menu);
            return true;
        }
        return super.onCreatePanelMenu(featureId, menu);
    }

    @Override
    public boolean onMenuItemSelected(int featuredId, MenuItem item) {
        if (featuredId == WindowUtils.FEATURE_VOICE_COMMANDS) {
            switch (item.getItemId()) {
                case R.id.add_menu_item:
                    Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
                    startActivityForResult(intent, item.getItemId());
                    break;
                case R.id.go_back:
                    goBackView();
                    break;
                default:
                    //Log.d("Hello", "onMenuItemSelected");

                    try {
                        new SaphireClient();
                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                    //SendPostTask runner = new SendPostTask();
                    //runner.execute(true);
                    break;
            }
        }
        return super.onMenuItemSelected(featuredId, item);
    }

    public void goBackView(){
        Intent intent = new Intent(this, com.example.chen.saphire.MainActivity.class);
        startActivity(intent);
    }

    public void gateWayFunction() {
        //Log.d("Hello", "gateWayFunction");
        mView = buildView();
        mCardScroller.getAdapter().notifyDataSetChanged();
    }

    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == R.id.add_menu_item && resultCode == RESULT_OK) {
            List<String> results = data.getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS);
            String food = results.get(0);
            //Add into ArrayList
            foods.add(food);
            mView = buildView();
            mCardScroller.getAdapter().notifyDataSetChanged();
        }
        super.onActivityResult(requestCode, resultCode, data);
    }

    private class SendPostTask extends AsyncTask<Boolean, Boolean, Boolean> {
        @Override
        protected Boolean doInBackground(Boolean... params) {
            Log.d("Hello", "doInBackground");
            String url = "http://saphire-server-dev.elasticbeanstalk.com/simulators/microwave";
            //String url = "http://httpbin.org/post";
            ArrayList<NameValuePair> urlParameters = new ArrayList<NameValuePair>();
            urlParameters.add(new BasicNameValuePair("command", "Start Cooking"));
            urlParameters.add(new BasicNameValuePair("state", "'start'"));

            try{
                HttpClient client = new DefaultHttpClient();
                HttpPost post = new HttpPost(url);
                post.setEntity(new UrlEncodedFormEntity(urlParameters));
                Log.d("Hello", "tryblock");
                HttpResponse postResponse = client.execute(post);

            }catch(Exception e){
                Log.e("POST", e.getMessage());
            }
            boolean result = true;
            return result;
        }

        protected void onPostExecute(Boolean result) {
            //Do something when finished
            doneFlag = result;
            //Log.d("Hello", "onPostExecute");
            gateWayFunction();
        }
    }
}
